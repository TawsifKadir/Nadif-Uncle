#include<iostream>
#include<queue>
#include<list>

using namespace std;

typedef struct node
    {
        node *left;
        node *right;
        int data;
    }node;

void print_list(node *root){
    if(root == nullptr)return;
    queue<node*> q1;
    node* temp;
    q1.push(root);
    while(!q1.empty()){
        if(q1.front()->left){
            q1.push(q1.front()->left);
        }
        if(q1.front()->right){
            q1.push(q1.front()->right);
        }
        cout << q1.front()->data << " ";
        q1.pop();
    }
}

node* insert_in_order(int arr[],int start,int end){
    node* root = new node;
    root->data = arr[(start+end)/2];
    if(start>end){
        return NULL;
    }else{
        int mid = (start+end)/2;
        root = new node;
        root->data = arr[mid];
        root->left = insert_in_order(arr,start,mid-1);
        root->right = insert_in_order(arr,mid+1,end);
    }
    return root;
}


node* insert_item(node* root,int x){
    
    if(root == NULL){
    node *newnode = new node;
    newnode->data = x;
    newnode->left = NULL;
    newnode->right = NULL;
    return newnode;
    }

    if(x < root->data){
        root->left = insert_item(root->left,x);
    }
    else{
        root->right = insert_item(root->right,x);
    }
    return root;
}


int main(){

    node *root = NULL;
    //root = insert_item(root,arr[middle]);
    //print_list(root);
    int arr[] = {-10,-3,0,5,9};
    root = insert_in_order(arr,0,4);
    print_list(root);
    return 0;
}
